@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="" asp-action="New" asp-controller="Editor" title="Manage">Create new project</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="" asp-action="Myprojects" asp-controller="Editor" title="Manage">My Projects</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.FirstName!</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-light" style="padding:20px">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-light btn btn-link" asp-area="Identity" asp-page="/Account/Login" style="padding:20px">Login</a>
            </li>
        }
    </ul>
